#ifndef STARFIELD_H
#define STARFIELD_H

#include "globals.h"
#include "entity.h"
#include "timer.h"

const uint8_t PROGMEM starfield_lookup[] =
{
0x53, 0x20, 0x08, 0x16, 0x75, 0x12, 0x56, 0x2e, 0x05, 0x08, 0x7f, 0x1b, 0x43,
0x0d, 0x5e, 0x07, 0x26, 0x0a, 0x4a, 0x2a, 0x64, 0x2a, 0x4a, 0x2f, 0x4f, 0x0d,
0x1f, 0x05, 0x7f, 0x31, 0x1e, 0x12, 0x6f, 0x11, 0x23, 0x09, 0x5e, 0x11, 0x71,
0x24, 0x79, 0x2e, 0x75, 0x3b, 0x13, 0x37, 0x3d, 0x0c, 0x45, 0x1b, 0x45, 0x0f,
0x1f, 0x24, 0x42, 0x32, 0x5f, 0x33, 0x73, 0x1c, 0x3f, 0x26, 0x5e, 0x1c, 0x26,
0x16, 0x19, 0x02, 0x00, 0x25, 0x1b, 0x24, 0x53, 0x24, 0x12, 0x0c, 0x5c, 0x0d,
0x5b, 0x0f, 0x30, 0x0d, 0x27, 0x11, 0x45, 0x00, 0x04, 0x0e, 0x23, 0x3b, 0x06,
0x27, 0x67, 0x08, 0x50, 0x3c, 0x08, 0x19, 0x4d, 0x1a, 0x13, 0x16, 0x40, 0x0d,
0x17, 0x10, 0x18, 0x13, 0x7a, 0x2a, 0x1c, 0x37, 0x65, 0x0e, 0x7f, 0x2b, 0x4b,
0x16, 0x58, 0x14, 0x26, 0x08, 0x76, 0x36, 0x11, 0x02, 0x09, 0x07, 0x6a, 0x04,
0x0a, 0x01, 0x7f, 0x09, 0x6a, 0x22, 0x62, 0x28, 0x26, 0x02, 0x01, 0x27, 0x74,
0x0b, 0x54, 0x31, 0x66, 0x15, 0x4e, 0x23, 0x6d, 0x0e, 0x1c, 0x28, 0x68, 0x3b,
0x58, 0x2f, 0x47, 0x2e, 0x16, 0x3a, 0x06, 0x36, 0x16, 0x19, 0x03, 0x0d, 0x2c,
0x38, 0x5a, 0x32, 0x06, 0x32, 0x1b, 0x07, 0x59, 0x32, 0x1d, 0x1c, 0x75, 0x22,
0x75, 0x16, 0x31, 0x0a, 0x1a, 0x32, 0x7c, 0x13, 0x62, 0x22, 0x21, 0x20, 0x31,
0x2d, 0x53, 0x11, 0x0d, 0x0d, 0x33, 0x32, 0x50, 0x0e, 0x69, 0x34, 0x11, 0x3d,
0x30, 0x2c, 0x06, 0x0f, 0x57, 0x0d, 0x33, 0x22, 0x50, 0x2c, 0x54, 0x24
};

#define STARFIELD_PARALLAX_LEVELS 4
#define STARFIELD_PARALLAX_RATES {1, 2, 4, 8}
#define STARFIELD_PARALLAX_COUNTS {50, 30, 20, 10}
#define STARFIELD_NUM_STARS 110

class Starfield : public Entity {
  private:
    const uint8_t _parallax_rates[STARFIELD_PARALLAX_LEVELS];
    const uint8_t _parallax_counts[STARFIELD_PARALLAX_LEVELS];
    uint8_t _offset;
    Timer _timer;

  public:
    Starfield() :
    _parallax_rates(STARFIELD_PARALLAX_RATES),
    _parallax_counts(STARFIELD_PARALLAX_COUNTS),
    _offset(0),
    _timer(20) {}

    virtual void update() {
      if (this->_timer.tick()) {
        this->_offset++;
        if (this->_offset == 128) this->_offset = 0;
      }
    }

    virtual void render() {
      uint16_t si = 0;
      uint8_t x;

      for (register int plevel = 0; plevel < STARFIELD_PARALLAX_LEVELS; plevel++) {
        for (register int scount = 0; scount < this->_parallax_counts[plevel]; scount++) {
          x = pgm_read_byte(&starfield_lookup[si]);
          x -= this->_parallax_rates[plevel] * this->_offset;
          if (x > WIDTH - 1) x = x - WIDTH;
          arduboy.drawPixel(x, pgm_read_byte(&starfield_lookup[si+1]));
          si += 2;
        }
      }
    }
};

#endif // STARFIELD_H
